// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectSem3.Models;

#nullable disable

namespace ProjectSem3.Migrations
{
    [DbContext(typeof(AbcCvContext))]
    [Migration("20230403082651_MyMigration")]
    partial class MyMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectSem3.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Account__3214EC27513CAE23");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("ProjectSem3.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Graduate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Literacy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Majors")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Vacancy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Candidat__3214EC2775A18902");

                    b.HasIndex("AccountId");

                    b.ToTable("Candidate", (string)null);
                });

            modelBuilder.Entity("ProjectSem3.Models.CandidateList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CanId")
                        .HasColumnType("int")
                        .HasColumnName("can_id");

                    b.Property<int?>("InterviewId")
                        .HasColumnType("int")
                        .HasColumnName("Interview_id");

                    b.Property<int?>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("job_id");

                    b.HasKey("Id")
                        .HasName("PK__Candidat__3214EC2768185F00");

                    b.HasIndex("CanId");

                    b.HasIndex("InterviewId");

                    b.HasIndex("JobId");

                    b.ToTable("Candidate_list", (string)null);
                });

            modelBuilder.Entity("ProjectSem3.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Following")
                        .HasColumnType("float");

                    b.Property<int>("Levers")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Category__3214EC2775695532");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("ProjectSem3.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Company__3214EC2785F75863");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("ProjectSem3.Models.Interview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("InterDate")
                        .HasColumnType("date")
                        .HasColumnName("Inter_Date");

                    b.Property<string>("Static")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Intervie__3214EC270814A06A");

                    b.ToTable("Interview", (string)null);
                });

            modelBuilder.Entity("ProjectSem3.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CatId")
                        .HasColumnType("int")
                        .HasColumnName("CatID");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("date")
                        .HasColumnName("Date_create");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Job_description");

                    b.Property<DateTime?>("Modification")
                        .HasColumnType("date");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Vacancy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Wage")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK__Job__3214EC27E8E9D3A6");

                    b.HasIndex("CatId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Job", (string)null);
                });

            modelBuilder.Entity("ProjectSem3.Models.Candidate", b =>
                {
                    b.HasOne("ProjectSem3.Models.Account", "Account")
                        .WithMany("Candidates")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__Candidate__Accou__398D8EEE");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ProjectSem3.Models.CandidateList", b =>
                {
                    b.HasOne("ProjectSem3.Models.Candidate", "Can")
                        .WithMany("CandidateLists")
                        .HasForeignKey("CanId")
                        .HasConstraintName("FK__Candidate__can_i__46E78A0C");

                    b.HasOne("ProjectSem3.Models.Interview", "Interview")
                        .WithMany("CandidateLists")
                        .HasForeignKey("InterviewId")
                        .HasConstraintName("FK__Candidate__Inter__47DBAE45");

                    b.HasOne("ProjectSem3.Models.Job", "Job")
                        .WithMany("CandidateLists")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK__Candidate__job_i__45F365D3");

                    b.Navigation("Can");

                    b.Navigation("Interview");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("ProjectSem3.Models.Job", b =>
                {
                    b.HasOne("ProjectSem3.Models.Category", "Cat")
                        .WithMany("Jobs")
                        .HasForeignKey("CatId")
                        .HasConstraintName("FK__Job__CatID__4222D4EF");

                    b.HasOne("ProjectSem3.Models.Company", "Company")
                        .WithMany("Jobs")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK__Job__CompanyID__4316F928");

                    b.Navigation("Cat");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ProjectSem3.Models.Account", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("ProjectSem3.Models.Candidate", b =>
                {
                    b.Navigation("CandidateLists");
                });

            modelBuilder.Entity("ProjectSem3.Models.Category", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("ProjectSem3.Models.Company", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("ProjectSem3.Models.Interview", b =>
                {
                    b.Navigation("CandidateLists");
                });

            modelBuilder.Entity("ProjectSem3.Models.Job", b =>
                {
                    b.Navigation("CandidateLists");
                });
#pragma warning restore 612, 618
        }
    }
}
